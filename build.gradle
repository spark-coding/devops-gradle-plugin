plugins {
  id "com.gradle.plugin-publish" version "0.12.0"
  id 'java-gradle-plugin'
  id 'maven-publish'
  id 'groovy'
}

group = 'com.kt'
version = '1.0.0.RELEASE'
repositories {
  jcenter()
}

dependencies {
  implementation "org.springframework.boot:spring-boot-gradle-plugin:2.3.1.RELEASE"
  implementation "io.spring.gradle:dependency-management-plugin:1.0.9.RELEASE"
  implementation 'com.cdancy:jenkins-rest:0.0.27'
  compileOnly 'org.projectlombok:lombok:1.18.12'
  annotationProcessor 'org.projectlombok:lombok:1.18.12'
  testImplementation 'org.spockframework:spock-core:1.3-groovy-2.5'
}

publishing {
  repositories {
    mavenLocal()
  }
}

gradlePlugin {
  plugins {
    devops {
      id = 'com.kt.devops'
      implementationClass = 'com.kt.DevOpsPlugin'
    }
  }
}

pluginBundle {
  website = 'https://github.com/spark-coding/devops-gradle-plugin'
  vcsUrl = 'https://github.com/spark-coding/devops-gradle-plugin'
  description = 'DevOps Gradle Plugin'
  tags = ['devops']

  plugins {
    devops {
      displayName = 'DevOps Gradle Plugin'
    }
  }
}

// Add a source set for the functional test suite
sourceSets {
  functionalTest {
  }
}

gradlePlugin.testSourceSets(sourceSets.functionalTest)
configurations.functionalTestImplementation.extendsFrom(configurations.testImplementation)

// Add a task to run the functional tests
tasks.register('functionalTest', Test) {
  testClassesDirs = sourceSets.functionalTest.output.classesDirs
  classpath = sourceSets.functionalTest.runtimeClasspath
}

check {
  // Run the functional tests as part of `check`
  dependsOn(tasks.functionalTest)
}
